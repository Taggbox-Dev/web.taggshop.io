{"version":3,"file":"static/js/715.3e72c91c.chunk.js","mappings":"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","sources":["app/Components/UserComponents/SubmitPic/submitButton.js"],"sourcesContent":["import React,{ Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submitPostData, showPopUP } from '../../../../actions/themeActions'\r\nimport QRCode from \"react-qr-code\";\r\n\r\nconst IMG_PATH = `https://test.taggbox.com/commerce/img/onsite-upload/`\r\n\r\nconst validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass SubmitButton extends Component {\r\n    state = {isOpen: false,step: 1,wall_id: null,name: null,email: null,upload_image: [],receiveMail: false,tandc: true,nameError: false,emailError: false}\r\n    onShowCloseSubmitPicPopUp = event => {\r\n        const { appendData, wall } = this.props;\r\n        this.props.showPopUP({ type: 'submit-pic', card: {}, personalization: wall.Personalization, ThemeRule: wall.ThemeRule, UserRule: wall.UserRule, wall: wall })\r\n    }\r\n    updateImageWithData = (data) => {\r\n        const { upload_image } = this.state;\r\n        if (upload_image && upload_image.length < 5) { upload_image.push(data); this.setState({ upload_image }) }\r\n    }\r\n\r\n    onUpdateImageAddCaption = (index) => event => {\r\n        const { upload_image } = this.state;\r\n        if (upload_image && upload_image.length > 0 && upload_image[index]) {\r\n            upload_image[index].caption = event.target.value;\r\n            upload_image[index].review = \"\";\r\n            upload_image[index].rating = 0;\r\n            this.setState({ upload_image })\r\n        }\r\n    }\r\n    onUpdateImageAddReview = (index) => event => {\r\n        const { upload_image } = this.state;\r\n        if (upload_image && upload_image.length > 0 && upload_image[index]) {\r\n            upload_image[index].review = event.target.value;\r\n            upload_image[index].caption = \"\";\r\n            this.setState({ upload_image })\r\n        }\r\n    }\r\n\r\n    onUpdateImageAddRatings = (rating, index) => {\r\n        const { upload_image } = this.state;\r\n        if (upload_image && upload_image.length > 0 && upload_image[index]) {\r\n            upload_image[index].caption = \"\";\r\n            upload_image[index].rating = rating;\r\n            this.setState({ upload_image })\r\n        }\r\n    }\r\n    onUpdateStep = (step) => event => { this.setState({ step }) }\r\n    onTextName = event => {\r\n        this.setState({ name: event.target.value, nameError: false }, () => {\r\n            if (this.state.name == null || this.state.name.length == 0) this.setState({ nameError: true })\r\n        })\r\n    }\r\n    onTextEmail = event => {\r\n        this.setState({ email: event.target.value, emailError: false }, () => {\r\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || this.state.email.includes(\"mailinator\")) this.setState({ emailError: true })\r\n        })\r\n    }\r\n    onSubmitData = event => {\r\n        const { name, email, upload_image, tandc, receiveMail } = this.state;\r\n        const { wallId } = this.props;\r\n        if (tandc && (name && name.length > 0) && (email && email.length > 0 && validateEmail(email) && !email.includes(\"mailinator\")) && (upload_image && upload_image.length > 0) && tandc) {\r\n            submitPostData({ wall_id: wallId, name, email, upload_image, receive_mail: receiveMail }).then((response) => {\r\n                this.setState({ step: 3 })\r\n            }).catch((error) => { console.error(error); });\r\n        }\r\n        else {\r\n            if (this.state.name == null || this.state.name.length == 0) this.setState({ nameError: true })\r\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || email.includes(\"mailinator\")) this.setState({ emailError: true })\r\n        }\r\n    }\r\n    onUpdatereceiveMail = event => { const { receiveMail } = this.state; this.setState({ receiveMail: !receiveMail })}\r\n    //onUpdatereceiveMail = event =>this.setState({ receiveMail: !this.state.receiveMail })\r\n    onUpdatetandc = event => { const { tandc } = this.state; this.setState({ tandc: !tandc }) }\r\n    removeProductImage = (removeIndex) => event => {\r\n        const { upload_image } = this.state;\r\n        if (upload_image && upload_image.length > 0) {\r\n            upload_image.splice(removeIndex, 1);\r\n        }\r\n        this.setState({ upload_image })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isOpen, upload_image, step, name, email, receiveMail, tandc, nameError, emailError } = this.state;\r\n        const { wall } = this.props; \r\n        const onsite = wall.UgcSettings;\r\n        const onsiteButton = onsite.onsite_status ? { backgroundColor: onsite.onsite_btn_color, borderColor: onsite.onsite_btn_color, color: onsite.onsite_btn_txt_color } : '';\r\n        const fontCss = {fontSize: wall.UgcSettings.btn_fontSize+'px', fontFamily: wall.UgcSettings.onsite_css_font_btn }\r\n\r\n        return <>\r\n          {onsite.onsite_status !==0 ?\r\n            <div id=\"tb_post_submit_container_button\" className={wall.Personalization.commerceTheme != `50`? `tb_post_submit_container`: `ts_gst__post_submit_container_button`}>\r\n            {wall.Personalization.commerceTheme != `50` ?\r\n                <div className=\"btn-scan\">\r\n                <div style={onsiteButton} className=\"tb_post_submit_btn\" onClick={this.onShowCloseSubmitPicPopUp}>\r\n                {wall.UgcSettings.onsite_qr_code_status ==1 ? <> <div className='qr-image'>\r\n                            <QRCode\r\n                                level=\"L\"\r\n                                size={60}\r\n                                value={wall.UgcSettings.onsite_popup_url}\r\n                            />\r\n                        </div>\r\n                     </> : null}\r\n                     {onsite.onsite_qr_code_btn_text ? <> \r\n                        {wall.UgcSettings.onsite_qr_code_status ==1 ?\r\n                        <div className='ts__qr_separator'><div></div></div> : ''}\r\n                   <div className={`ts_qr-text  tb-cTSfont-${wall.UgcSettings.onsite_font_varient_btn}`} style={fontCss}>\r\n                       \r\n                    {/* {onsite.onsite_btn_icon || onsite.onsite_btn_icon != '' ?  \r\n                    <div className={`tb-sp-font ${onsite.onsite_btn_icon}`}><div></div></div> : null} */}\r\n                    \r\n                    <div className={`ts_qr-text_wrap tb-cTSfont-${wall.UgcSettings.onsite_font_varient_btn}`} style={fontCss}>\r\n                    {onsite.onsite_qr_code_status && onsite.onsite_status ? onsite.onsite_qr_code_btn_text : onsite.onsite_qr_code_status ? onsite.onsite_qr_code_btn_text : onsite.onsite_status ? onsite.onsite_btn_txt : 'Submit a Post'}\r\n                    </div>\r\n\r\n\r\n                    \r\n                    </div> </> :''}\r\n                </div>\r\n                </div>:\r\n                \r\n\r\n\r\n                <div className=\"ts_gst_btn-scan\" style={onsiteButton}>\r\n                   <div className=\"ts_gst_post_submit_btn\" onClick={this.onShowCloseSubmitPicPopUp}>\r\n                   <div className='ts_gst_qr-image'>\r\n                   { wall.UgcSettings.onsite_qr_code_status==`1` ? <div style={{backgroundColor: 'white', padding:'4.5px', width:'70px',height:'70px', marginLeft:'auto', marginRight: 'auto'}}><QRCode level=\"L\" size={60} value={wall.UgcSettings.onsite_popup_url} /></div> :''}\r\n                           <div className={`ts_gst_qr-text  tb-cTSfont-${wall.UgcSettings.font_varient}`} style={fontCss}>\r\n                                <div className={`ts_gst_qr-text_wrap ${wall.UgcSettings.onsite_qr_code_status==`1` ? \"wt_qrcode\" :\"wo_qrcode\"}`} >\r\n                                {onsite.onsite_qr_code_status && onsite.onsite_status ? onsite.onsite_qr_code_btn_text : onsite.onsite_qr_code_status ? onsite.onsite_qr_code_btn_text : onsite.onsite_status ? onsite.onsite_btn_txt : 'Submit a Post'}\r\n                                </div>\r\n                            </div>\r\n                           </div>\r\n                           <div className='ts_gst_qr-image_mobile'>\r\n                               Add Your Photo\r\n                           </div>\r\n                           </div>\r\n                   </div>}\r\n                \r\n                </div> :''}\r\n           \r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => { return { showPopUP: (data) => dispatch(showPopUP(data)), }}; const mapStateToProps = state => { return {wallId: state.appData.wallID, }}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SubmitButton);"],"names":["validateEmail","email","test","String","toLowerCase","SubmitButton","Component","constructor","arguments","state","isOpen","step","wall_id","name","upload_image","receiveMail","tandc","nameError","emailError","onShowCloseSubmitPicPopUp","event","appendData","wall","this","props","showPopUP","type","card","personalization","Personalization","ThemeRule","UserRule","updateImageWithData","data","length","push","setState","onUpdateImageAddCaption","index","caption","target","value","review","rating","onUpdateImageAddReview","onUpdateImageAddRatings","onUpdateStep","onTextName","onTextEmail","includes","onSubmitData","wallId","submitPostData","receive_mail","then","response","catch","error","console","onUpdatereceiveMail","onUpdatetandc","removeProductImage","removeIndex","splice","render","onsite","UgcSettings","onsiteButton","onsite_status","backgroundColor","onsite_btn_color","borderColor","color","onsite_btn_txt_color","fontCss","fontSize","btn_fontSize","fontFamily","onsite_css_font_btn","_jsx","_Fragment","children","id","className","commerceTheme","_jsxs","style","onClick","onsite_qr_code_status","QRCode","level","size","onsite_popup_url","onsite_qr_code_btn_text","concat","onsite_font_varient_btn","onsite_btn_txt","padding","width","height","marginLeft","marginRight","font_varient","connect","appData","wallID","dispatch"],"sourceRoot":""}